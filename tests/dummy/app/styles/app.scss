html {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  margin: 0;
}

*, *:before, *:after {
  box-sizing: inherit;
}

@function map-get-deep($map, $keys...) {
  @if length($keys) == 1 {
    $keys: nth($keys, 1);
  }
  $warn: "#{nth($keys, 1)}";
  $length: length($keys);
  $get: map-get($map, nth($keys, 1));

  @if $length > 1 {
    @for $i from 2 through $length {
      @if $get != null and type-of($get) == 'map' {
        $warn: $warn + "->#{nth($keys, $i)}";
        $get: map-get($get, nth($keys, $i));

        @if $get == null {
          @return map-get-deep-warning($warn, $get, nth($keys, $i));
        }
      }
      @else {
        @return map-get-deep-warning($warn, $get, nth($keys, $i));
      }
    }
  }

  @return $get;
}

@import 'palette.json';
@import 'freestyle.json';
@import 'ember-freestyle';

@function palette-color(
  $name: 'primary',
  $variant: $ColorPalette-baseKey,
  $opacity: 1
) {
  $color: null;

  $colorVariants: map-get($ColorPalette-colors, $name);

  @if $colorVariants {
    $color: map-get($colorVariants, $variant);
  }

  $alpha: if(type-of($opacity) == 'number', $opacity, map-get($ColorPalette-opacities, $opacity));

  @if $alpha {
    $color: rgba($color, $alpha);
  }

  @return $color;
}

@import 'components/x-foo';
